/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gymbookingsystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelclass.ConnectionDB;

/**
 *
 * @author Hisyam
 */
public class PaymentUI extends javax.swing.JFrame {

    /**
     * Creates new form Payment
     */
    private int id;

    public PaymentUI() {
        initComponents();
        tableUpdateCoach();
        tableUpdateMember();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void tableUpdateCoach() {
        int i;

        try {
            String sql = "SELECT payments.id, coaches.name, payments.date, payments.fee, payments.isPaid "
                    + "FROM (payments "
                    + "INNER JOIN coaches ON payments.coachId = coaches.id) ";

            PreparedStatement pst = new ConnectionDB(sql).tryConn();

            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();

            i = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tableCoach.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();

                for (int x = 1; x <= i; x++) {
                    v.add(rs.getInt("payments.id"));
                    v.add(rs.getString("coaches.name"));
                    v.add(rs.getString("payments.date"));
                    v.add(rs.getFloat("payments.fee"));

                    if (rs.getInt("payments.isPaid") == 1) {
                        v.add("Paid");
                    } else {
                        v.add("Unpaid");
                    }
                }
                df.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void filterCoach(String filterData) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tableCoach.getModel());
        tableCoach.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(filterData));
    }

    private void tableUpdateMember() {
        int i;

        try {
            String sql = "SELECT payments.id, members.name, payments.date, payments.fee, payments.isPaid "
                    + "FROM (payments "
                    + "INNER JOIN members ON payments.memberId = members.id) ";

            PreparedStatement pst = new ConnectionDB(sql).tryConn();

            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();

            i = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tableMember.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();

                for (int x = 1; x <= i; x++) {
                    v.add(rs.getInt("payments.id"));
                    v.add(rs.getString("members.name"));
                    v.add(rs.getString("payments.date"));
                    v.add(rs.getFloat("payments.fee"));

                    if (rs.getInt("payments.isPaid") == 1) {
                        v.add("Paid");
                    } else {
                        v.add("Unpaid");
                    }
                }
                df.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void filterMember(String filterData) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tableMember.getModel());
        tableMember.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(filterData));
    }

    public void clearData() {
        etFee.setText(null);
        id = 0;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpPaidStatus = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        etFee = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rbPaid = new javax.swing.JRadioButton();
        rbUnpaid = new javax.swing.JRadioButton();
        btnUpdatePayment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMember = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        etSearchMember = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCoach = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        etSearchCoach = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Payment");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Fee");

        etFee.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Paid status");

        btnGrpPaidStatus.add(rbPaid);
        rbPaid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbPaid.setText("Paid");
        rbPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPaidActionPerformed(evt);
            }
        });

        btnGrpPaidStatus.add(rbUnpaid);
        rbUnpaid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbUnpaid.setText("Unpaid");
        rbUnpaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbUnpaidActionPerformed(evt);
            }
        });

        btnUpdatePayment.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdatePayment.setText("Update Payment");
        btnUpdatePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbPaid)
                                .addGap(18, 18, 18)
                                .addComponent(rbUnpaid))
                            .addComponent(etFee, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(btnUpdatePayment)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rbPaid)
                    .addComponent(rbUnpaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdatePayment)
                .addGap(155, 155, 155))
        );

        tableMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Payment date", "Fee", "Paid status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMemberMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMember);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Search");

        etSearchMember.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etSearchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etSearchMemberActionPerformed(evt);
            }
        });
        etSearchMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etSearchMemberKeyReleased(evt);
            }
        });

        tableCoach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Payment Date", "Fee", "Paid Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCoach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoachMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCoach);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Member's payment");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Coach's payment");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Search");

        etSearchCoach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etSearchCoach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etSearchCoachKeyReleased(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etSearchCoach, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(etSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(etSearchCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1101, 719));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void etSearchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etSearchMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etSearchMemberActionPerformed

    private void rbPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPaidActionPerformed

    private void rbUnpaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbUnpaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbUnpaidActionPerformed

    private void btnUpdatePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePaymentActionPerformed
        if (etFee.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please choose a payment data to edit!", "Validation", JOptionPane.OK_OPTION);
        } else {
            try {
                String sql = "UPDATE payments SET fee=?, date=?, isPaid=? WHERE id=?";

                PreparedStatement pst = new ConnectionDB(sql).tryConn();

                pst.setString(1, etFee.getText());

                if (rbPaid.isSelected()) {
                    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                    Date date = new Date();

                    pst.setString(2, formatter.format(date));
                    pst.setBoolean(3, true);
                } else if (rbUnpaid.isSelected()) {
                    pst.setBoolean(3, false);
                }

                pst.setInt(4, id);

                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Successfully edit!");
                tableUpdateCoach();
                tableUpdateMember();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        clearData();
    }//GEN-LAST:event_btnUpdatePaymentActionPerformed

    private void tableMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMemberMouseClicked
        DefaultTableModel df = (DefaultTableModel) tableMember.getModel();
        int selectedIndex = tableMember.getSelectedRow();
        tableCoach.setRowSelectionAllowed(false);
        tableMember.setRowSelectionAllowed(true);

        id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());

        etFee.setText(df.getValueAt(selectedIndex, 3).toString());

        if (df.getValueAt(selectedIndex, 4).toString().equals(rbPaid.getText())) {
            rbPaid.setSelected(true);
        } else if (df.getValueAt(selectedIndex, 4).toString().equals(rbUnpaid.getText())) {
            rbUnpaid.setSelected(true);
        }
    }//GEN-LAST:event_tableMemberMouseClicked

    private void etSearchMemberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etSearchMemberKeyReleased
        filterMember(etSearchMember.getText());
    }//GEN-LAST:event_etSearchMemberKeyReleased

    private void etSearchCoachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etSearchCoachKeyReleased
        filterCoach(etSearchCoach.getText());
    }//GEN-LAST:event_etSearchCoachKeyReleased

    private void tableCoachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoachMouseClicked
        DefaultTableModel df = (DefaultTableModel) tableCoach.getModel();
        int selectedIndex = tableCoach.getSelectedRow();
        tableMember.setRowSelectionAllowed(false);
        tableCoach.setRowSelectionAllowed(true);

        id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());

        etFee.setText(df.getValueAt(selectedIndex, 3).toString());

        if (df.getValueAt(selectedIndex, 4).toString().equals(rbPaid.getText())) {
            rbPaid.setSelected(true);
        } else if (df.getValueAt(selectedIndex, 4).toString().equals(rbUnpaid.getText())) {
            rbUnpaid.setSelected(true);
        }
    }//GEN-LAST:event_tableCoachMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Home home = new Home();
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.ButtonGroup btnGrpPaidStatus;
    private javax.swing.JButton btnUpdatePayment;
    private javax.swing.JTextField etFee;
    private javax.swing.JTextField etSearchCoach;
    private javax.swing.JTextField etSearchMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbPaid;
    private javax.swing.JRadioButton rbUnpaid;
    private javax.swing.JTable tableCoach;
    private javax.swing.JTable tableMember;
    // End of variables declaration//GEN-END:variables
}
