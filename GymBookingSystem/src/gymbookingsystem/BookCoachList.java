/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gymbookingsystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelclass.Booking;
import modelclass.ConnectionDB;

/**
 *
 * @author Hisyam
 */
public class BookCoachList extends javax.swing.JFrame {

    /**
     * Creates new form BookCoachList
     */
    private int paymentId;
    private float bookPrice;

    public BookCoachList() {
        initComponents();
        tableUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void tableUpdate() {
        int i;

        try {
            String sql = "SELECT coachbookings.id, coachbookings.paymentId, coaches.name, members.name, payments.fee, coachbookings.date, coachbookings.timeFrom, coachbookings.timeTo, coachbookings.status "
                    + "FROM (((coachbookings "
                    + "INNER JOIN coaches ON coachbookings.coachId = coaches.id) "
                    + "INNER JOIN members ON coachbookings.memberId = members.id) "
                    + "INNER JOIN payments ON coachbookings.paymentId = payments.id)";

            PreparedStatement pst = new ConnectionDB(sql).tryConn();

            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();

            i = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tableBookCoach.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                paymentId = rs.getInt("coachbookings.paymentId");

                for (int x = 1; x <= i; x++) {
                    v.add(rs.getInt("coachbookings.id"));
                    v.add(rs.getString("members.name"));
                    v.add(rs.getString("coaches.name"));
                    v.add(rs.getString("payments.fee"));
                    v.add(rs.getString("coachbookings.date"));
                    v.add(rs.getString("coachbookings.timeFrom"));
                    v.add(rs.getString("coachbookings.timeTo"));
                    v.add(rs.getString("coachbookings.status"));
                }

                df.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void filter(String filterData) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tableBookCoach.getModel());
        tableBookCoach.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(filterData));
    }

    public void clearData() {
        etDate.setText(null);
        etTimeFrom.setText(null);
        etTimeTo.setText(null);
        lblPrice.setText(null);
        bookPrice = 0;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBookCoach = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        etDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        etTimeFrom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        etTimeTo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        btnCancelBook = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        etSearchBookCoach = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Booking Coach List");

        tableBookCoach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Member Name", "Coach Name", "Price", "Date", "Time From", "Time To", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBookCoach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBookCoachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBookCoach);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Date");

        etDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Time From");

        etTimeFrom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Time To");

        etTimeTo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Price");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("RM");

        lblPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPrice.setText("-");

        btnCancelBook.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelBook.setText("Cancel Booking");
        btnCancelBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelBookActionPerformed(evt);
            }
        });

        btnUpdateBook.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateBook.setText("Update Booking");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(etDate, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(20, 20, 20)
                        .addComponent(etTimeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPrice))
                            .addComponent(etTimeTo, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdateBook)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(etTimeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(etTimeTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(lblPrice))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelBook)
                    .addComponent(btnUpdateBook))
                .addGap(242, 242, 242)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Search");

        etSearchBookCoach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etSearchBookCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etSearchBookCoachActionPerformed(evt);
            }
        });
        etSearchBookCoach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etSearchBookCoachKeyReleased(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(etSearchBookCoach, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etSearchBookCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(147, 147, 147))
        );

        setSize(new java.awt.Dimension(1101, 611));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableBookCoachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBookCoachMouseClicked
        DefaultTableModel df = (DefaultTableModel) tableBookCoach.getModel();
        int selectedIndex = tableBookCoach.getSelectedRow();

        lblPrice.setText(df.getValueAt(selectedIndex, 3).toString());
        etDate.setText(df.getValueAt(selectedIndex, 4).toString());
        etTimeFrom.setText(df.getValueAt(selectedIndex, 5).toString());
        etTimeTo.setText(df.getValueAt(selectedIndex, 6).toString());
    }//GEN-LAST:event_tableBookCoachMouseClicked

    private void btnCancelBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelBookActionPerformed
        DefaultTableModel df = (DefaultTableModel) tableBookCoach.getModel();
        int selectedIndex = tableBookCoach.getSelectedRow();

        if (etDate.getText().isEmpty() || etTimeFrom.getText().isEmpty() || etTimeTo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please choose a booking data!", "Validation", JOptionPane.OK_OPTION);
        } else {
            try {
                int id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());
                int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to cancel this booking?", "Warning", JOptionPane.YES_NO_OPTION);

                if (dialogResult == JOptionPane.YES_NO_OPTION) {
                    String sql = "UPDATE coachbookings SET status=? WHERE id=?";

                    PreparedStatement pst = new ConnectionDB(sql).tryConn();

                    pst.setString(1, "Cancel");
                    pst.setInt(2, id);

                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Successfully cancel a booking!");
                    tableUpdate();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        clearData();
    }//GEN-LAST:event_btnCancelBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        DefaultTableModel df = (DefaultTableModel) tableBookCoach.getModel();
        int selectedIndex = tableBookCoach.getSelectedRow();

        //aggregation
        Booking book = new Booking();
        book.setPayment(new modelclass.Payment());

        if (etDate.getText().isEmpty() || etTimeFrom.getText().isEmpty() || etTimeTo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please choose a booking to edit!", "Validation", JOptionPane.OK_OPTION);
        } else {
            bookPrice = book.getPayment().calcBookCoach(Integer.parseInt(etTimeFrom.getText()), Integer.parseInt(etTimeTo.getText()));
            int dialogResult = JOptionPane.showConfirmDialog(null, "Total price: MYR " + Float.toString(bookPrice) + ". Do you want to proceed?", "Price info", JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_NO_OPTION) {
                try {
                    int id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());

                    String sql = "UPDATE coachbookings SET date=?, timeFrom=?, timeTo=? WHERE id=?";

                    PreparedStatement pst = new ConnectionDB(sql).tryConn();

                    pst.setString(1, etDate.getText());
                    pst.setString(2, etTimeFrom.getText());
                    pst.setString(3, etTimeTo.getText());
                    pst.setInt(4, id);

                    pst.executeUpdate();

                    try {
                        String sql2 = "UPDATE payments SET fee=? WHERE id=?";

                        PreparedStatement pst2 = new ConnectionDB(sql2).tryConn();

                        pst2.setFloat(1, bookPrice);
                        pst2.setInt(2, paymentId);

                        pst2.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    JOptionPane.showMessageDialog(this, "Successfully update a booking!");
                    tableUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
        clearData();
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void etSearchBookCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etSearchBookCoachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etSearchBookCoachActionPerformed

    private void etSearchBookCoachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etSearchBookCoachKeyReleased
        filter(etSearchBookCoach.getText());
    }//GEN-LAST:event_etSearchBookCoachKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Coach coach = new Coach();
        this.dispose();
        coach.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookCoachList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookCoachList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookCoachList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookCoachList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookCoachList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancelBook;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JTextField etDate;
    private javax.swing.JTextField etSearchBookCoach;
    private javax.swing.JTextField etTimeFrom;
    private javax.swing.JTextField etTimeTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JTable tableBookCoach;
    // End of variables declaration//GEN-END:variables
}
