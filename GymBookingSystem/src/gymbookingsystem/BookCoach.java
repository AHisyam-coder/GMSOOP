/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gymbookingsystem;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelclass.Booking;
import modelclass.Coach;
import modelclass.ConnectionDB;
import modelclass.GymSession;
import modelclass.Payment;

/**
 *
 * @author Hisyam
 */
public class BookCoach extends javax.swing.JFrame {

    /**
     * Creates new form BookCoach
     */
    private int coachId, memberId, paymentId;
    private float bookPrice;
    private Boolean coachAvailability;
    private Booking book;

    public BookCoach() {
        initComponents();
        tableUpdateCoach();
        tableUpdateMember();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void tableUpdateCoach() {
        int i;

        try {
            String sql = "SELECT * FROM coaches";

            PreparedStatement pst = new ConnectionDB(sql).tryConn();

            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();

            i = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tableCoach.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();

                for (int x = 1; x <= i; x++) {
                    v.add(rs.getString("id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("gender"));

                    if (rs.getInt("isAvailable") == 1) {
                        v.add("Available");
                    } else {
                        v.add("Not Available");
                    }
                }

                df.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void filterCoach(String filterData) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tableCoach.getModel());
        tableCoach.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(filterData));
    }

    private void tableUpdateMember() {
        int i;

        try {
            String sql = "SELECT * FROM members";

            PreparedStatement pst = new ConnectionDB(sql).tryConn();

            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();

            i = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tableMember.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();

                for (int x = 1; x <= i; x++) {
                    v.add(rs.getString("id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("gender"));
                    v.add(rs.getString("type"));
                }

                df.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void filterMember(String filterData) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tableMember.getModel());
        tableMember.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(filterData));
    }

    public void clearData() {
        etDate.setText(null);
        etTimeFrom.setText(null);
        etTimeTo.setText(null);
        memberId = 0;
        coachId = 0;
        paymentId = 0;
        bookPrice = 0;
        lblPrice.setText(null);
        coachAvailability = false;
    }

    public void payment() {
        try {
            String sql = "INSERT INTO `payments` (`memberId`, `coachId`, `date`, `fee`, `isPaid`) VALUES (?, ?, ?, ?, ?)";

            PreparedStatement pst = new ConnectionDB(sql).tryConn(Statement.RETURN_GENERATED_KEYS);

            if (etDate.getText().isEmpty() || etTimeFrom.getText().isEmpty() || etTimeTo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill in all the details!", "Validation", JOptionPane.OK_OPTION);
            } else if (memberId == 0 || coachId == 0) {
                JOptionPane.showMessageDialog(null, "Please choose a pair of coach and member!", "Validation", JOptionPane.OK_OPTION);
            } else {
                pst.setInt(1, memberId);
                pst.setInt(2, coachId);
                pst.setString(3, book.getPayment().getPaymentDate());
                pst.setFloat(4, (float) book.getPayment().getPaymentTotal());
                pst.setBoolean(5, book.getPayment().getPaymentStatus());

                pst.executeUpdate();

                try (ResultSet generatedKeys = pst.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        paymentId = (int) generatedKeys.getLong(1);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCoach = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMember = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        etSearchCoach = new javax.swing.JTextField();
        etSearchMember = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        etDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        etTimeFrom = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        etTimeTo = new javax.swing.JTextField();
        btnCalcPrice = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        btnBookCoach = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cmbPay = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Book Coach");

        tableCoach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableCoach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCoach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCoach);

        tableMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMemberMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableMember);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Choose coaches");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Choose members");

        etSearchCoach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        etSearchCoach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etSearchCoachKeyReleased(evt);
            }
        });

        etSearchMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        etSearchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etSearchMemberActionPerformed(evt);
            }
        });
        etSearchMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etSearchMemberKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Search");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Search");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Date");

        etDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etDate.setForeground(new java.awt.Color(153, 153, 153));
        etDate.setText("26/07/2021");
        etDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                etDateFocusGained(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Time from");

        etTimeFrom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etTimeFrom.setForeground(new java.awt.Color(153, 153, 153));
        etTimeFrom.setText("0930");
        etTimeFrom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                etTimeFromFocusGained(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Time to");

        etTimeTo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etTimeTo.setForeground(new java.awt.Color(153, 153, 153));
        etTimeTo.setText("1330");
        etTimeTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                etTimeToFocusGained(evt);
            }
        });

        btnCalcPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCalcPrice.setText("Calculate Price");
        btnCalcPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(etDate, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(etTimeFrom)
                            .addComponent(etTimeTo)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(btnCalcPrice)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(etDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(etTimeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(etTimeTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btnCalcPrice)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Total price:  RM");

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel10.setText("1 hour = RM12");

        lblPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPrice.setText("-");

        btnBookCoach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBookCoach.setText("Book Coach");
        btnBookCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookCoachActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Note: We only accepts cash, no refund for cancellation or any changes");

        cmbPay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbPay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pay Now", "Pay Later" }));
        cmbPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPayActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Paid status");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPrice))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(cmbPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBookCoach)
                        .addGap(166, 166, 166))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel10)
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblPrice))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cmbPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBookCoach)
                .addContainerGap())
        );

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear All");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(292, 292, 292))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(etSearchCoach, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(149, 149, 149)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(etSearchMember))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(etSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etSearchCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnClear))
                .addGap(205, 205, 205))
        );

        setSize(new java.awt.Dimension(1101, 665));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void etSearchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etSearchMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etSearchMemberActionPerformed

    private void tableCoachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoachMouseClicked
        DefaultTableModel df = (DefaultTableModel) tableCoach.getModel();
        int selectedIndex = tableCoach.getSelectedRow();
        coachId = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());

        if (df.getValueAt(selectedIndex, 3).toString().equals("Available")) {
            coachAvailability = true;
        } else {
            coachAvailability = false;
        }
    }//GEN-LAST:event_tableCoachMouseClicked

    private void tableMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMemberMouseClicked
        DefaultTableModel df = (DefaultTableModel) tableMember.getModel();
        int selectedIndex = tableMember.getSelectedRow();
        memberId = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());
    }//GEN-LAST:event_tableMemberMouseClicked

    private void etSearchCoachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etSearchCoachKeyReleased
        filterCoach(etSearchCoach.getText());
    }//GEN-LAST:event_etSearchCoachKeyReleased

    private void etSearchMemberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etSearchMemberKeyReleased
        filterMember(etSearchMember.getText());
    }//GEN-LAST:event_etSearchMemberKeyReleased

    private void etTimeFromFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_etTimeFromFocusGained
        if (etTimeFrom.getText().contains("0930")) {
            etTimeFrom.setText(null);
            etTimeFrom.setForeground(Color.black);
        }
    }//GEN-LAST:event_etTimeFromFocusGained

    private void etTimeToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_etTimeToFocusGained
        if (etTimeTo.getText().contains("1330")) {
            etTimeTo.setText(null);
            etTimeTo.setForeground(Color.black);
        }
    }//GEN-LAST:event_etTimeToFocusGained

    private void etDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_etDateFocusGained
        if (etDate.getText().contains("26/07/2021")) {
            etDate.setText(null);
            etDate.setForeground(Color.black);
        }
    }//GEN-LAST:event_etDateFocusGained

    private void btnCalcPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcPriceActionPerformed
        if (etDate.getText().isEmpty() || etTimeFrom.getText().isEmpty() || etTimeTo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all the details!", "Validation", JOptionPane.OK_OPTION);
        } else if (memberId == 0 || coachId == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a pair of coach and member!", "Validation", JOptionPane.OK_OPTION);
        } else {
            //aggregation
            book = new Booking();
            book.setPayment(new Payment());

            bookPrice = book.getPayment().calcBookCoach(Integer.parseInt(etTimeFrom.getText()), Integer.parseInt(etTimeTo.getText()));
            lblPrice.setText(Float.toString(bookPrice));
        }
    }//GEN-LAST:event_btnCalcPriceActionPerformed

    private void btnBookCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookCoachActionPerformed
        if (bookPrice == 0) {
            JOptionPane.showMessageDialog(null, "Please fill in all the details!", "Validation", JOptionPane.OK_OPTION);
        } else if (coachAvailability != true) {
            JOptionPane.showMessageDialog(null, "The chosen coach is not available, please choose the other coach!", "Validation", JOptionPane.OK_OPTION);
        } else {
            Payment pay = new Payment();

            String payStatus = String.valueOf(cmbPay.getSelectedItem());

            pay.setCoachId(coachId);
            pay.setCustomerId(memberId);
            pay.setPaymentTotal(bookPrice);

            if (payStatus.equals("Pay Now")) {
                pay.setPaymentDate(etDate.getText());
                pay.setPaymentStatus(true);
            } else {
                pay.setPaymentDate(null);
                pay.setPaymentStatus(false);
            }

            //composition coach class && booking class
            book = new Booking(null, etDate.getText(), bookPrice, etTimeFrom.getText(), etTimeTo.getText(), "Success", pay, new Coach());

            //insert into payment table
            payment();

            try {
                String sql = "INSERT INTO `coachbookings` (`memberId`, `coachId`, `paymentId`, `date`, `timeFrom`, `timeTo`, `status`) VALUES (?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement pst = new ConnectionDB(sql).tryConn();

                if (etDate.getText().isEmpty() || etTimeFrom.getText().isEmpty() || etTimeTo.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill in all the details!", "Validation", JOptionPane.OK_OPTION);
                } else if (memberId == 0 || coachId == 0) {
                    JOptionPane.showMessageDialog(null, "Please choose a pair of coach and member!", "Validation", JOptionPane.OK_OPTION);
                } else {
                    pst.setInt(1, memberId);
                    pst.setInt(2, coachId);
                    pst.setInt(3, paymentId);
                    pst.setString(4, book.getBookingDate());
                    pst.setString(5, book.getBookingTimeFrom());
                    pst.setString(6, book.getBookingTimeTo());
                    pst.setString(7, book.getBookingStatus());

                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Successfully book a coach!");

                    clearData();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnBookCoachActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CoachUI coach = new CoachUI();
        this.dispose();
        coach.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearData();
    }//GEN-LAST:event_btnClearActionPerformed

    private void cmbPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPayActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBookCoach;
    private javax.swing.JButton btnCalcPrice;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox<String> cmbPay;
    private javax.swing.JTextField etDate;
    private javax.swing.JTextField etSearchCoach;
    private javax.swing.JTextField etSearchMember;
    private javax.swing.JTextField etTimeFrom;
    private javax.swing.JTextField etTimeTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JTable tableCoach;
    private javax.swing.JTable tableMember;
    // End of variables declaration//GEN-END:variables
}
